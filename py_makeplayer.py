#!/opt/local/bin/python

from random import randint

#Configuration settings
NUMRANDFILES = 8
PL_NUMCHANNELS = 9
PL_NUMSIDCHANNELS = 6   #3 for mono sid, 6 for stereo sid, or 9 for tripple sid...
PL_NUMSONGPOSITIONS = 256
PL_ZPSTART = 2



#Variable init
zpcounter = PL_ZPSTART
playerfile = ""
datafile = ""

#Generate data file
datafile += "; droneMON PLAYER DATA\n"
datafile += "\n"
datafile += "		; align code to page border for speed increase\n"
datafile += "		!align 255, 0\n"
datafile += "\n"
datafile += "pl_seqptrs_lo:\n"
for i in range(PL_NUMSONGPOSITIONS):
    datafile += "	   !byte <pl_seq_"+'{:02X}'.format(i)+"\n"
datafile += "\n"
datafile += "pl_seqptrs_hi:\n"
for i in range(PL_NUMSONGPOSITIONS):
    datafile += "	   !byte >pl_seq_"+'{:02X}'.format(i)+"\n"
datafile += "\n"
for i in range(PL_NUMCHANNELS):
    datafile += "pl_v"+str(i).zfill(2)+"_seqlist:\n"
    datafile += "		!fill PL_NUMSONGPOSITIONS, 0\n"
    # datafile += "        !for i, PL_NUMSONGPOSITIONS {!byte i-1}\n"
datafile += "\n"
for i in range(PL_NUMSONGPOSITIONS):
    datafile += "pl_seq_"+'{:02X}'.format(i)+":\n"
    datafile += "		rts\n"
datafile += "\n"




#Generate code file
playerfile += "; droneMON PLAYER CODE\n"
playerfile += "\n"
playerfile += "; This file is autogenerated by py_makeplayer.py and deleted when issuing a make clean,\n"
playerfile += "; so please don't mess with it directly. Make changes in the python script instead.\n"
playerfile += "\n"
playerfile += ";============================\n"
playerfile += ";Config constants\n"
playerfile += "\n"
playerfile += "PL_NUMCHANNELS = "+str(PL_NUMCHANNELS)+"\n"
playerfile += "PL_NUMSIDCHANNELS = "+str(PL_NUMSIDCHANNELS)+"\n"
playerfile += "PL_NUMSONGPOSITIONS = "+str(PL_NUMSONGPOSITIONS)+"\n"
playerfile += "PL_ZP_SONGPOS = $"+'{:02X}'.format(zpcounter)+"\n"
zpcounter += 1
playerfile += "PL_ZP_SEQBREAKFLAG = $"+'{:02X}'.format(zpcounter)+"\n"
zpcounter += 1
for i in range(PL_NUMCHANNELS):
    playerfile += "PL_ZP_CHN"+str(i).zfill(2)+" = $"+'{:02X}'.format(zpcounter)+"\n"
    zpcounter += 2
playerfile += "\n"
playerfile += ";============================\n"
playerfile += "pl_main:\n"
playerfile += "\n"


playerfile += "	;---------------------------\n"
playerfile += "	; Sequence parsing\n"
playerfile += "\n"
playerfile += "		;First check for the sequence break flag\n"
playerfile += "		lda PL_ZP_SEQBREAKFLAG\n"
playerfile += "		bne .noseqbreak\n"
playerfile += "\n"
playerfile += "			;Time to fetch a new sequence pointer\n"
playerfile += "			inc PL_ZP_SONGPOS	;Bump to next\n"
playerfile += "			ldy PL_ZP_SONGPOS\n"
playerfile += "\n"

for i in range(PL_NUMCHANNELS):
    playerfile += "			;Fetch pointer for v"+str(i).zfill(2)+"\n"
    playerfile += "			lax pl_v"+str(i).zfill(2)+"_seqlist,y\n"
    playerfile += "			lda pl_seqptrs_lo,x\n"
    playerfile += "			sta PL_ZP_CHN"+str(i).zfill(2)+"\n"
    playerfile += "			lda pl_seqptrs_hi,x\n"
    playerfile += "			sta PL_ZP_CHN"+str(i).zfill(2)+"+1\n"
    playerfile += "\n"
playerfile += "			;Clear seqbreakflag\n"
playerfile += "			inc PL_ZP_SEQBREAKFLAG\n"
playerfile += "\n"
playerfile += ".noseqbreak:\n"
playerfile += ";---\n"
playerfile += "\n"
playerfile += "		;--------------------\n"
playerfile += "		;Här ska det vara nån tick/step/groove-nånting-kod.\n"
playerfile += "pl_tickcount = *+1\n"
playerfile += "		ldx #0\n"
playerfile += "		beq .seqparse\n"
playerfile += "		dec pl_tickcount\n"
playerfile += "		cpx #2\n"
playerfile += "		bne .noseqparse\n"


# playerfile += "        dec pl_tickcount\n"
# playerfile += "        bpl pl_checkhardrestart\n"
# playerfile += "        beq .noseqparse\n"
# playerfile += "\n"
# playerfile += "            ;-1 tick.\n"
# playerfile += "\n"
playerfile += ".pretrigparse:\n"
playerfile += "		jmp .doneseqparse\n"
playerfile += "\n"
playerfile += ".seqparse:\n"
for i in range(PL_NUMCHANNELS):
    # playerfile += "xyz\n"
    playerfile += "		;--------------------\n"
    playerfile += "		;Parse channel "+'{:02X}'.format(i)+"\n"
    playerfile += "pl_chn"+'{:02X}'.format(i)+"stepcount = *+1\n"
    playerfile += "		ldy #0\n"
    playerfile += "pl_chn"+'{:02X}'.format(i)+"pos = *+1\n"
    playerfile += "		ldy #0\n"
    playerfile += "		lda PL_ZP_CHN"+'{:02X}'.format(i)+",y	;Read control byte\n"
    playerfile += "\n"
playerfile += "\n"
playerfile += ".doneseqparse:\n"
playerfile += ".noseqparse:\n"
playerfile += "\n"
playerfile += "		rts\n"
playerfile += "		;---\n"
playerfile += "\n"
playerfile += "\n"
playerfile += ";============================\n"
playerfile += "pl_init:\n"
playerfile += "		rts\n"
playerfile += "		;---\n"
playerfile += "\n"




text_file = open("pl_main.a", "w")
text_file.write(playerfile)
text_file.close()

text_file = open("pl_data.a", "w")
text_file.write(datafile)
text_file.close()

#Finally, generate some files with random bytes, for watermarking purposes
# for i in range(NUMRANDFILES):
#     rndfile = ""
#     for j in range(randint(1,5)):
#         rndfile += "     !byte $"+'{:02X}'.format(randint(0,255))+"\n"
#     text_file = open("ed_rndfile"+str(i+1)+".a", "w")
#     text_file.write(rndfile)
#     text_file.close()
    

